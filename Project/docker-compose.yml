services:
  frontend:
    image: nginx:1.27.2
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./config/default.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`todo.zebcappaert.tech`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=letsencrypt"
    networks:
      - external-net
      - backend-net

  backend:
    build: ./backend
    environment:
      - STORAGE
      - MYSQL_HOST
      - MYSQL_USER
      - MYSQL_PWD=${MYSQL_PASSWORD}
      - MYSQL_DB=${MYSQL_DATABASE}
    networks:
      - external-net
      - backend-net
    labels:
      - traefik.enable=true
      - "traefik.http.routers.backend.rule=Host(`todo.zebcappaert.tech`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.docker.network=external-net"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"

  db:
    image: mysql:9.1.0
    volumes:
      - ./frontend/init.sql:/docker-entrypoint-initdb.d/init.sql
      - dbVolume:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_DATABASE
    networks:
      - backend-net

volumes:
  dbVolume:


networks:
  external-net:
    external: true
  backend-net:
